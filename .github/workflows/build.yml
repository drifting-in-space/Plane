on:
  push:
    branches: [ master ]
    paths:
      - '.github/workflows/build.yml'
      - 'crates/**'
  pull_request:
    branches: [ master ]

name: Build

jobs:
  build:
    name: Rust build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,enable=true,priority=100,prefix=sha-,suffix=,format=short
            type=raw,value=latest

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - uses: Swatinem/rust-cache@v1
        with:
          working-directory: crates

      - name: Build
        run: cargo build --release
        working-directory: crates

      - name: Run tests
        run: cargo test --release
        working-directory: crates

      - name: Build and push Controller
        uses: docker/build-push-action@v2
        with:
          context: crates/target/release
          file: crates/Dockerfile
          build-args: |
            BINNAME=spawner-controller
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/drifting-in-space/spawner-controller
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Sidecar
        uses: docker/build-push-action@v2
        with:
          context: crates/target/release
          file: crates/Dockerfile
          build-args: |
            BINNAME=spawner-sidecar
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/drifting-in-space/spawner-sidecar
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Sweeper
        uses: docker/build-push-action@v2
        with:
          context: crates/target/release
          file: crates/Dockerfile
          build-args: |
            BINNAME=spawner-sweeper
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/drifting-in-space/spawner-sweeper
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push API
        uses: docker/build-push-action@v2
        with:
          context: crates/target/release
          file: crates/Dockerfile
          build-args: |
            BINNAME=spawner-api
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/drifting-in-space/spawner-api
          labels: ${{ steps.meta.outputs.labels }}